!function(n,t){"function"==typeof define&&define.amd?define(["lodash","backbone","monaco"],t):"object"==typeof exports?module.exports=t(require("lodash"),require("backbone"),require("monaco")):n.Monaco=t(n._,n.Backbone,n.Monaco)}(this,function(n,t,e){var o=function(t){var e=function(e){n.forIn(t,function(o,i){var r=e.prototype[i]||function(){};"function"==typeof o?e.prototype[i]=function(){var n=this,t=Array.prototype.slice.call(arguments);return t[o.length-1]=function(){return r.apply(n,arguments)},o.apply(this,t)}:"object"==typeof o&&"object"==typeof r?n.extend(e.prototype[i],t[i]):e.prototype[i]="object"==typeof o?n.cloneDeep(t[i]):t[i]})};return e.mixinFunctions=t||{},e.prototype.namespace="mixins",e.namespace="mixins",e};return o.create=function(n){return new o(n)},e.Mixin=o,e.Application.prototype.mixins={},e.Application.prototype.mixin=function(n){var t;for(t=1;t<arguments.length;t++){if(!this.mixins[arguments[t]])throw new Error("Unable to find mixin: "+arguments[t]);this.mixins[arguments[t]](n)}},e});
//# sourceMappingURL=monaco-mixins.min.js.map