!function(n,e){"function"==typeof define&&define.amd?define(["lodash","backbone","monaco"],e):"object"==typeof exports?module.exports=e(require("lodash"),require("backbone"),require("monaco")):n.Monaco=e(n._,n.Backbone,n.Monaco)}(this,function(n,e,t){var o=function(e){var t=function(t){n.forIn(e,function(o,i){var r=t.prototype[i]||function(){};"function"==typeof o?t.prototype[i]=function(){var n=this,e=Array.prototype.slice.call(arguments);return e[o.length-1]=function(){return r.apply(n,arguments)},o.apply(this,e)}:"object"==typeof o&&"object"==typeof r?n.extend(t.prototype[i],e[i]):t.prototype[i]="object"==typeof o?n.cloneDeep(e[i]):e[i]})};return t.mixinFunctions=e||{},t.prototype.namespace="mixins",t.namespace="mixins",t.extend=function(t){return o.create(n.extend({},e,t))},t};return o.create=function(n){return new o(n)},t.Mixin=o,t.Application.prototype.mixins={},t.Application.prototype.mixin=function(n){var e;for(e=1;e<arguments.length;e++){if(!this.mixins[arguments[e]])throw new Error("Unable to find mixin: "+arguments[e]);this.mixins[arguments[e]](n)}},t});
//# sourceMappingURL=monaco-mixins.min.js.map